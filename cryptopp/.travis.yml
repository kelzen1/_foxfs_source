language: cpp
dist: bionic

git:
  depth: 5

jobs:
  include:
    # Ubuntu Bionic
    - name: Ubuntu Bionic, GCC, CMake 3.12.4
      os: linux
      compiler: gcc
      dist: bionic

    - name: Ubuntu Bionic, Clang, CMake 3.12.4
      os: linux
      compiler: clang
      dist: bionic

    # Ubuntu Xenial
    - name: Ubuntu Xenial, GCC, CMake 3.9.2
      os: linux
      compiler: gcc
      dist: xenial

    - name: Ubuntu Xenial, Clang, CMake 3.9.2
      os: linux
      compiler: clang
      dist: xenial

    # Ubuntu Trusty
    - name: Ubuntu Trusty, GCC, CMake 2.8.12
      os: linux
      compiler: gcc
      dist: trusty

    - name: Ubuntu Trusty, Clang, CMake 2.8.12
      os: linux
      compiler: clang
      dist: trusty

    # ARM64
    - name: Ubuntu Bionic, GCC, ARM64, CMake 3.10.2
      os: linux
      arch: arm64
      compiler: gcc
      dist: bionic

    - name: Ubuntu Bionic, Clang, ARM64, CMake 3.10.2
      os: linux
      arch: arm64
      compiler: clang
      dist: bionic

    # PPC64
    - name: Ubuntu Bionic, GCC, PPC64, CMake 3.5.1
      os: linux
      arch: ppc64le
      compiler: gcc
      dist: bionic

    - name: Ubuntu Bionic, Clang, PPC64, CMake 3.10.2
      os: linux
      arch: ppc64le
      compiler: clang
      dist: bionic
      env:
        - CC=clang-8
        - CXX=clang++-8

    # s390x
    - name: Ubuntu Bionic, GCC, s390x, CMake 3.5.1
      os: linux
      arch: s390x
      compiler: gcc
      dist: bionic

    - name: Ubuntu Bionic, Clang, s390x, CMake 3.10.2
      os: linux
      arch: s390x
      compiler: clang
      dist: bionic
      env:
        - CC=clang-8
        - CXX=clang++-8

    # Newest Xcode available
    - name: OS X 10.14, Clang, XCode 11.2, CMake 3.17.0
      os: osx
      osx_image: xcode11.2
      arch: amd64

    - name: OS X 10.13, Clang, XCode 9.4, CMake 3.15.5
      os: osx
      osx_image: xcode9.4
      arch: amd64

    # Oldest Xcode available
    - name: OS X 10.11, Clang, XCode 7.3, CMake 3.2.2
      os: osx
      osx_image: xcode7.3
      arch: amd64

    # Ubuntu Bionic, GCC, No-asm
    - name: Ubuntu Bionic, GCC, No-Asm
      os: linux
      compiler: gcc
      dist: bionic
      script:
        # Override the default script
        - cmake -DCMAKE_C_COMPILER="$CC" -DCMAKE_CXX_COMPILER="$CXX" -DDISABLE_ASM=1 ../
        - make -k -j 2 VERBOSE=1
        - ctest --output-on-failure
        - ./cryptest.exe v

    # Ubuntu Bionic, Clang, No-asm
    - name: Ubuntu Bionic, Clang, No-Asm
      os: linux
      compiler: clang
      dist: bionic
      script:
        # Override the default script
        - cmake -DCMAKE_C_COMPILER="$CC" -DCMAKE_CXX_COMPILER="$CXX" -DDISABLE_ASM=1 ../
        - make -k -j 2 VERBOSE=1
        - ctest --output-on-failure
        - ./cryptest.exe v

  allow_failures:
    # Clang 7.0 and below will likely have trouble due to
    # https://bugs.llvm.org/show_bug.cgi?id=39704
    - arch: ppc64le
      compiler: clang
    # Clang has a fair amount of trouble
    # on platforms Apple does not support
    - arch: s390x
      compiler: clang

#
# Build Dependencies
#
before_install:
  - |
    # Clang 7 compiler is completely broken on PPC64 and s390x
    if [[ "$TRAVIS_CPU_ARCH" == "ppc64le" ]] || [[ "$TRAVIS_CPU_ARCH" == "s390x" ]]; then
        if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$TRAVIS_COMPILER" == "clang" ]]; then
            # https://github.com/travis-ci/travis-ci/issues/9037
            sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A145
            sudo apt-get -qq -y install --no-install-recommends clang-8
        fi
    fi

before_script:
  # Clone Crypto++, prepare build with Cmake
  - |
    cd ..
    git clone https://github.com/weidai11/cryptopp.git cryptopp
    cp cryptopp-cmake/*.* cryptopp
    cd cryptopp
    mkdir cmake_build
    cd cmake_build

script:
  # CMake is being run from .../cryptopp/cmake_build/ directory
  - cmake -DCMAKE_C_COMPILER="$CC" -DCMAKE_CXX_COMPILER="$CXX" ../
  - make -k -j 2 VERBOSE=1
  - ctest --output-on-failure
  - ./cryptest.exe v

addons:
  - sonarcloud: false

# Whitelist branches to avoid testing feature branches twice
branches:
  only:
    - master
    - /\/ci$/

notifications:
  email:
    recipients:
      - cryptopp-build@googlegroups.com
    on_success: always # default: change
    on_failure: always # default: always
